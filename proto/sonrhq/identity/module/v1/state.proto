syntax = "proto3";
package sonrhq.identity.module.v1;

import "cosmos/orm/v1/orm.proto";
import "cosmos/orm/v1alpha1/schema.proto";

// Module is the app config object of the module.
// Learn more: https://docs.cosmos.network/main/building-modules/depinject
message State {
  option (cosmos.orm.v1alpha1.module_schema) = {
    schema_file : {id : 1 proto_file_name : "identity/module/v1/state.proto"}
  };
}

// Account is the root sonr account table which contains all sub-identities.
message Account {
  option (cosmos.orm.v1.table) = {
    id : 1
    primary_key: {fields: "id" auto_increment: true}
    index: {
      id: 1
      fields: "address,coin_type" unique: true
    }
    index: {
      id: 2
      fields: "public_key,key_type" unique: true
    }
  };

  uint64 id = 1;
  string address = 2;
  uint32 coin_type = 3;
  bytes public_key = 4;
}

// Credential is the total supply of the module.
message Credential {
  option (cosmos.orm.v1.table) = {
    id : 2
    primary_key : {fields : "did"}
  };

  string did = 1;
  string persona = 2;
  repeated string transport = 3;
  bytes public_key = 4;
  string attestation_type = 5;
  bytes credential_id = 6;
}

// Keyshare is the keyshare of the identity.
message Keyshare {
  option (cosmos.orm.v1.table) = {
    id : 4
    primary_key : {fields : "did"}
  };

  string did = 1;
  string address = 2;
  int32 path = 3;
  uint32 algorithm = 4;
  string key_type = 5;
  uint32 chain_code = 6;
  string cid = 7;
  string public_key = 8;
}

// Identity is the root owner of the Sonr identity.
message Identity {
  option (cosmos.orm.v1.table) = {
    id : 5
    primary_key: {fields: "id" auto_increment: true}
    index: {
      id: 1
      fields: "address,coin_type" unique: true
    }
    index: {
      id: 2
      fields: "public_key,key_type" unique: true
    }
  };

  uint64 id = 1;
  string address = 2;
  uint32 coin_type = 3;
  bytes public_key = 4;
  string key_type = 5;
  string network = 6;
}
