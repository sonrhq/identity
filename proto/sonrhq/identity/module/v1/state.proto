syntax = "proto3";
package sonrhq.identity.module.v1;

import "cosmos/orm/v1/orm.proto";
import "cosmos/orm/v1alpha1/schema.proto";

// CoinType is the BIP-0044 coin type for each supported coin.
enum CoinType {
  // Bitcoins coin type is 0
  COIN_TYPE_UNSPECIFIED = 0;

  // Testnet coin type is 1
  COIN_TYPE_ATOM = 1;

  // Litecoin coin type is 2
  COIN_TYPE_AXELAR = 2;

  // Dogecoin coin type is 3
  COIN_TYPE_BITCOIN = 3;

  // Ethereum coin type is 60
  COIN_TYPE_ETHEREUM = 4;

  // Sonr coin type is 703
  COIN_TYPE_EVMOS = 5;

  // Cosmos coin type is 118
  COIN_TYPE_FILECOIN = 6;

  // Filecoin coin type is 461
  COIN_TYPE_JUNO = 7;

  // Handshake coin type is 5353
  COIN_TYPE_OSMO = 8;

  // Solana coin type is 501
  COIN_TYPE_SOLANA = 9;

  // Ripple coin type is 144
  COIN_TYPE_SONR = 10;

  // Stargaze coin type is 1001
  COIN_TYPE_STARGAZE = 11;
}


// Module is the app config object of the module.
// Learn more: https://docs.cosmos.network/main/building-modules/depinject
message State {
  option (cosmos.orm.v1alpha1.module_schema) = {
    schema_file : {id : 1 proto_file_name : "identity/module/v1/state.proto"}
  };
}

// Account is the root sonr account table which contains all sub-identities.
message Account {
  option (cosmos.orm.v1.table) = {
    id : 1
    primary_key : {fields : "index" auto_increment : true}
    index : {id : 1 fields : "address" unique : true}
    index : {id : 2 fields : "public_key" unique : true}
  };

  uint64 index = 1;
  string address = 2;
  CoinType coin_type = 3;
  bytes public_key = 4;
}

// Credential is the total supply of the module.
message Credential {
  option (cosmos.orm.v1.table) = {
    id : 2
    primary_key : {fields : "id" auto_increment : true}
    index : {id : 1 fields : "handle"}
    index : {id : 2 fields : "origin,handle" unique : true}
    index : {id : 3 fields : "credential_id" unique : true}
    index : {id : 4 fields : "public_key" unique : true}
  };

  uint64 id = 1;
  string handle = 2;
  repeated string transport = 3;
  bytes public_key = 4;
  string attestation_type = 5;
  bytes credential_id = 6;
  string origin = 7;
}

// Keyshare is the keyshare of the identity.
message Keyshare {
  option (cosmos.orm.v1.table) = {
    id : 4
    primary_key : {fields : "did"}
  };

  string did = 1;
  string address = 2;
  int32 path = 3;
  uint32 algorithm = 4;
  string key_type = 5;
  uint32 chain_code = 6;
  string cid = 7;
  string public_key = 8;
}

// Identity is the root owner of the Sonr identity.
message Identity {
  option (cosmos.orm.v1.table) = {
    id : 5
    primary_key : {fields : "id" auto_increment : true}
    index : {id : 1 fields : "address,coin_type" unique : true}
    index : {id : 2 fields : "public_key,key_type" unique : true}
  };

  uint64 id = 1;
  string address = 2;
  uint32 coin_type = 3;
  bytes public_key = 4;
  string key_type = 5;
  string network = 6;
}
