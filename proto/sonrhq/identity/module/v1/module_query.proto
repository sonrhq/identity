// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.
syntax = "proto3";
package sonrhq.identity.module.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "sonrhq/identity/module/v1/module.proto";

// ModuleQueryService queries the state of the tables specified by sonrhq/identity/module/v1/module.proto.
service ModuleQueryService {
  // Get queries the Account table by its primary key.
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {}
  // ListAccount queries the Account table using prefix and range queries against defined indexes.
  rpc ListAccount(ListAccountRequest) returns (ListAccountResponse) {}
  // Get queries the Identity table by its primary key.
  rpc GetIdentity(GetIdentityRequest) returns (GetIdentityResponse) {}
  // ListIdentity queries the Identity table using prefix and range queries against defined indexes.
  rpc ListIdentity(ListIdentityRequest) returns (ListIdentityResponse) {}
}

// GetAccountRequest is the ModuleQuery/GetAccountRequest request type.
message GetAccountRequest {
  // address specifies the value of the address field in the primary key.
  string address = 1;
}

// GetAccountResponse is the ModuleQuery/GetAccountResponse response type.
message GetAccountResponse {
  // value is the response value.
  Account value = 1;
}

// ListAccountRequest is the ModuleQuery/ListAccountRequest request type.
message ListAccountRequest {
  // IndexKey specifies the value of an index key to use in prefix and range queries.
  message IndexKey {
    // key specifies the index key value.
    oneof key {
      // address specifies the value of the Address index key to use in the query.
      Address address = 1;
    }
    
    message Address {
      // address is the value of the address field in the index.
      // It can be omitted to query for all valid values of that field in this segment of the index.
      optional string address = 1;
    }
  }
  
  // query specifies the type of query - either a prefix or range query.
  oneof query {
    // prefix_query specifies the index key value to use for the prefix query.
    IndexKey prefix_query = 1;
    // range_query specifies the index key from/to values to use for the range query.
    RangeQuery range_query = 2;
  }
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
  
  // RangeQuery specifies the from/to index keys for a range query.
  message RangeQuery {
    // from is the index key to use for the start of the range query.
    // To query from the start of an index, specify an index key for that index with empty values.
    IndexKey from = 1;
    // to is the index key to use for the end of the range query.
    // The index key type MUST be the same as the index key type used for from.
    // To query from to the end of an index it can be omitted.
    IndexKey to = 2;
  }
}

// ListAccountResponse is the ModuleQuery/ListAccountResponse response type.
message ListAccountResponse {
  // values are the results of the query.
  repeated Account values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// GetIdentityRequest is the ModuleQuery/GetIdentityRequest request type.
message GetIdentityRequest {
  // did specifies the value of the did field in the primary key.
  string did = 1;
}

// GetIdentityResponse is the ModuleQuery/GetIdentityResponse response type.
message GetIdentityResponse {
  // value is the response value.
  Identity value = 1;
}

// ListIdentityRequest is the ModuleQuery/ListIdentityRequest request type.
message ListIdentityRequest {
  // IndexKey specifies the value of an index key to use in prefix and range queries.
  message IndexKey {
    // key specifies the index key value.
    oneof key {
      // did specifies the value of the Did index key to use in the query.
      Did did = 1;
    }
    
    message Did {
      // did is the value of the did field in the index.
      // It can be omitted to query for all valid values of that field in this segment of the index.
      optional string did = 1;
    }
  }
  
  // query specifies the type of query - either a prefix or range query.
  oneof query {
    // prefix_query specifies the index key value to use for the prefix query.
    IndexKey prefix_query = 1;
    // range_query specifies the index key from/to values to use for the range query.
    RangeQuery range_query = 2;
  }
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
  
  // RangeQuery specifies the from/to index keys for a range query.
  message RangeQuery {
    // from is the index key to use for the start of the range query.
    // To query from the start of an index, specify an index key for that index with empty values.
    IndexKey from = 1;
    // to is the index key to use for the end of the range query.
    // The index key type MUST be the same as the index key type used for from.
    // To query from to the end of an index it can be omitted.
    IndexKey to = 2;
  }
}

// ListIdentityResponse is the ModuleQuery/ListIdentityResponse response type.
message ListIdentityResponse {
  // values are the results of the query.
  repeated Identity values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

